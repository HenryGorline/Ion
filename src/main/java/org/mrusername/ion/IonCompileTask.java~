package org.mrusername.ion;

import org.gradle.api.tasks.TaskAction;
import org.gradle.api.tasks.compile.AbstractCompile;
import org.mrusername.ion.core.compile.IonCompiler;
import org.mrusername.ion.core.compile.IonFileCompiler;

import java.io.File;
import java.util.Collection;
import java.util.List;
import java.util.stream.Collectors;

public class IonCompile extends AbstractCompile {
    @TaskAction
    public void compile() {
        IonFileCompiler ionCompiler = IonFileCompiler.of();
        List<String> sourceFiles = getSource().getFiles().stream().map(File::getAbsolutePath).collect(Collectors.toList());
        for(var file : sourceFiles) {
            boolean result = ionCompiler.compile(file, getDestinationDir().getAbsolutePath());
            if (!result) {
                throw new RuntimeException("IonCompiler failed to compile the Java sources.");
            }
        }

    }
}