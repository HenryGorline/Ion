package org.mrusername.ion;

import org.gradle.api.file.FileCollection;
import org.gradle.api.file.FileTree;
import org.gradle.api.tasks.TaskAction;
import org.gradle.api.tasks.compile.AbstractCompile;
import org.gradle.api.tasks.compile.JavaCompile;
import org.mrusername.ion.core.compile.IonFileCompiler;

import java.io.File;
import java.util.Collection;
import java.util.List;
import java.util.stream.Collectors;

public class IonCompile extends JavaCompile {

    @TaskAction
    public void compile() {
        File destinationDir = getDestinationDir();
        IonFileCompiler ionCompiler = IonFileCompiler.of();
        List<String> sourceFiles = getSource().getFiles().stream().map(File::getAbsolutePath).toList();
        for (var file : sourceFiles) {
            boolean result = ionCompiler.compile(file, destinationDir.getAbsolutePath());
            if (!result) {
                throw new RuntimeException("IonCompiler failed to compile the Ion sources.");
            }
        }
    }
}